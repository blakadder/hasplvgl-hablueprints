
blueprint:
  name: HASP Control Slider Object
  description: Link a HASP slider object with a light
  domain: automation
  input:
    target_entity:
      name: Entity controlled by the object
      description: Select an entity to bind with the toggle object on p<x>b<x>
      selector:
        entity:
    plate:
      name: HASP Plate 
      description: Select HASP plate whith the object
      selector:
        entity:
          integration: mqtt
          domain: binary_sensor
          device_class: moving
    page:
      name: Page ID (p<x>)
      selector: 
        number:
          min: 0
          max: 12
          mode: box
    object:
      name: Object ID (b<x>)
      selector: 
        number:
          min: 1
          max: 200
          mode: box
variables:
  page: !input page
  object: !input object
  target_entity: !input target_entity
  haspentity: !input target_plate
  topic: '{{ state_attr(""~ haspentity ~"","node") }}'
trigger:
  - platform: mqtt
    topic: 'hasp/+/state/+'
  - platform: state
    entity_id: !input target_entity
  - platform: homeassistant
    event: start
  - platform: state
    entity_id: !input target_plate
    attribute: status
    from: unavailable
    to: available
action:
  - choose:
      - conditions:
          - condition: template
            value_template: >-
              {{ (trigger.platform == "mqtt") and (trigger.topic == "hasp/" ~ node ~ "/state/p" ~ page ~ "b" ~ object ~ "") }}
        sequence:
          - service: light.turn_on
            entity_id: !input target_entity
            data:
              brightness: '{{ trigger.payload_json.val | int }}'
      - conditions:
          - condition: template
            value_template: '{{ trigger.platform == "state" }}'
        sequence:
          - service: mqtt.publish
            data:
              topic: 'hasp/{{node}}/command/p[{{page}}].b[{{object}}].val'
              payload: '{{ trigger.to_state.attributes.brightness | int }}'
      - conditions:
          - condition: template
            value_template: '{{ (trigger.platform == "state") and (trigger.entity_id == "" ~ haspentity ~"") }}'
        sequence:
          - service: mqtt.publish
            data:
              topic: 'hasp/{{node}}/command/p[{{page}}].b[{{object}}].val'
              payload: '{{ trigger.to_state.attributes.brightness | int }}'
mode: single
